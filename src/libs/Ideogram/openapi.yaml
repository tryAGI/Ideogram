openapi: 3.0.4
info:
  title: Ideogram - OpenAPI 3.0
  description: This is the API definition for Ideogram AI.
  version: 1.0.0
servers:
  - url: ''
paths:
  /describe:
    post:
      tags:
        - vision
      summary: Describe
      description: "Describe an image.\n\nSupported image formats include JPEG, PNG, and WebP.\n"
      operationId: post_describe
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DescribeRequest'
        required: true
      responses:
        '200':
          description: Description(s) created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeResponse'
        '400':
          description: Invalid input provided.
        '422':
          description: Image failed the safety check.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageSafetyError'
        '429':
          description: Too many requests.
      x-fern-examples:
        - code-samples:
            - sdk: curl
              code: "curl -X POST https://api.ideogram.ai/describe \\\n  -H \"Api-Key: <apiKey>\" \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F image_file=@<file1>\n"
      x-openapi-router-controller: external_api.generated.openapi.controllers.vision_controller
  /edit:
    post:
      tags:
        - generate
      summary: Edit (legacy)
      description: "Edit a given image synchronously using the provided mask. The mask indicates which part of the image\nshould be edited, while the prompt and chosen style type can further guide the edit.\n\nSupported image formats include JPEG, PNG, and WebP.\n\nImages links are available for a limited period of time; if you would like to keep the image, you must download it.\n"
      operationId: post_edit_image
      requestBody:
        description: A request to edit an image with Ideogram.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditImageRequest'
            encoding:
              prompt:
                contentType: text/plain
                style: form
              model:
                contentType: text/plain
                style: form
              magic_prompt_option:
                contentType: text/plain
                style: form
              seed:
                contentType: text/plain
                style: form
              style_type:
                contentType: text/plain
                style: form
        required: true
        x-body-name: body
      responses:
        '200':
          description: Image edits generated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateImageResponse'
        '400':
          description: Invalid input provided.
        '401':
          description: Not authorized to generate an image.
        '422':
          description: Prompt or Initial Image failed the safety checks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateImageSafetyError'
        '429':
          description: Too many requests.
      x-openapi-router-controller: external_api.generated.openapi.controllers.generate_controller
  /generate:
    post:
      tags:
        - generate
      summary: Generate (legacy)
      description: "Generates images synchronously based on a given prompt and optional parameters.\n\nImages links are available for a limited period of time; if you would like to keep the image, you must download it.\n"
      operationId: post_generate_image
      requestBody:
        description: A request to generate an image with Ideogram.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateImageRequest'
        required: true
        x-body-name: generate_image_request
      responses:
        '200':
          description: Image(s) generated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateImageResponse'
        '400':
          description: Invalid input provided.
        '401':
          description: Not authorized to generate an image.
        '422':
          description: Prompt failed the safety check.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateImageSafetyError'
        '429':
          description: Too many requests.
      x-openapi-router-controller: external_api.generated.openapi.controllers.generate_controller
  /internal-testing:
    post:
      tags:
        - internal-testing
      summary: Testing
      description: "Just a testing endpoint\n"
      operationId: post_internal_testing
      parameters:
        - name: X-Test-Header
          in: header
          description: Test header
          style: simple
          schema:
            type: string
        - name: X-Test-Header-2
          in: header
          description: Test header
          style: simple
          schema:
            type: string
      requestBody:
        description: A request for testing.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InternalTestingRequest'
            encoding:
              x_position:
                contentType: text/plain
                style: form
              some_text:
                contentType: text/plain
                style: form
              nested_object:
                contentType: application/json
                style: form
              repeated_complex_field:
                contentType: application/json
                style: form
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postInternalTesting_200_response'
      x-openapi-router-controller: external_api.generated.openapi.controllers.internal_testing_controller
  /manage/api/add_credits:
    post:
      tags:
        - manage
      summary: Add credits to an API user's account.
      operationId: post_add_credits_for_api
      requestBody:
        description: A request to add credits to an API user's account.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAddCreditsRequest'
        required: true
        x-body-name: post_add_credits_request
      responses:
        '200':
          description: API subscription content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAddCreditsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAddCreditsError'
        '401':
          description: Not authorized
        '403':
          description: Not authorized
      security:
        - BearerAuth: [ ]
      x-openapi-router-controller: external_api.generated.openapi.controllers.manage_controller
  /manage/api/api_keys:
    get:
      tags:
        - manage
      summary: Retrieve current API keys and their respective data.
      operationId: get_api_keys
      responses:
        '200':
          description: API keys the user currently manages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApiKeysResponse'
        '401':
          description: Not authorized
        '403':
          description: Not authorized
      security:
        - BearerAuth: [ ]
      x-openapi-router-controller: external_api.generated.openapi.controllers.manage_controller
    post:
      tags:
        - manage
      summary: Creates an API key.
      operationId: create_api_key
      responses:
        '200':
          description: The newly created API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostApiKeyResponse'
        '401':
          description: Not authorized
        '402':
          description: Payment is required; did you create a subscription?
      security:
        - BearerAuth: [ ]
      x-openapi-router-controller: external_api.generated.openapi.controllers.manage_controller
  '/manage/api/api_keys/{api_key_id}':
    delete:
      tags:
        - manage
      summary: Delete an API key.
      operationId: delete_single_api_key
      parameters:
        - name: api_key_id
          in: path
          description: The ID of API key to operate on. Expected to be a URL safe Base64 encoded UUID.
          required: true
          schema:
            type: string
          example: d7abd0cd4ae94db78676e986a4ebd8dc
      responses:
        '204':
          description: Success
        '400':
          description: Something went wrong
        '401':
          description: Not authorized
      security:
        - BearerAuth: [ ]
      x-openapi-router-controller: external_api.generated.openapi.controllers.manage_controller
  /manage/api/reactivate:
    post:
      tags:
        - manage
      summary: Reactivates a subscription by attempting to re-enable Metronome billing.
      operationId: reactivate_subscription
      responses:
        '200':
          description: API subscription content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostApiReactivateResponse'
        '401':
          description: Not authorized
        '402':
          description: Payment is required; is your payment method setup?
        '404':
          description: User does not have a subscription to reactivate.
      security:
        - BearerAuth: [ ]
      x-openapi-router-controller: external_api.generated.openapi.controllers.manage_controller
  /manage/api/stripe_subscription:
    get:
      tags:
        - manage
      summary: Retrieve data relevant to connecting to Stripe.
      operationId: get_api_stripe_subscription
      parameters:
        - name: isBusiness
          in: query
          description: Whether the subscription is intended to be used for business or personal use.
          schema:
            type: boolean
      responses:
        '200':
          description: API subscription content related to connecting to Stripe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageApiStripeSubscriptionResponse'
        '401':
          description: Not authorized
        '403':
          description: Not authorized
      security:
        - BearerAuth: [ ]
      x-openapi-router-controller: external_api.generated.openapi.controllers.manage_controller
  /manage/api/subscription:
    get:
      tags:
        - manage
      summary: Retrieve data relevant to creating an API subscription.
      operationId: get_api_subscription
      responses:
        '200':
          description: API subscription content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageApiSubscriptionResponse'
        '401':
          description: Not authorized
        '403':
          description: Not authorized
      security:
        - BearerAuth: [ ]
      x-openapi-router-controller: external_api.generated.openapi.controllers.manage_controller
    post:
      tags:
        - manage
      summary: Update API subscription settings
      operationId: post_api_subscription
      requestBody:
        description: A request to update the API subscription properties. This should only be called after terms have been accepted.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostApiSubscriptionRequest'
        required: true
        x-body-name: post_api_subscription_request
      responses:
        '200':
          description: API subscription content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostApiSubscriptionResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostApiSubscriptionError'
        '401':
          description: Not authorized
        '403':
          description: Not authorized
      security:
        - BearerAuth: [ ]
      x-openapi-router-controller: external_api.generated.openapi.controllers.manage_controller
  /manage/api/terms:
    get:
      tags:
        - manage
      summary: Retrieve the latest terms of service for API usage.
      operationId: get_api_terms
      responses:
        '200':
          description: Retrieves the latest API terms
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApiTermsResponse'
        '401':
          description: Not authorized
        '403':
          description: Not authorized
      security:
        - BearerAuth: [ ]
      x-openapi-router-controller: external_api.generated.openapi.controllers.manage_controller
    post:
      tags:
        - manage
      summary: Accept terms
      operationId: post_api_terms
      requestBody:
        description: A request to accept the API terms.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostApiTermsRequest'
        required: true
        x-body-name: post_api_terms_request
      responses:
        '204':
          description: Success; no content.
        '400':
          description: Bad Request
        '401':
          description: Not authorized
        '403':
          description: Not authorized
      security:
        - BearerAuth: [ ]
      x-openapi-router-controller: external_api.generated.openapi.controllers.manage_controller
  /reframe:
    post:
      tags:
        - generate
      summary: Reframe (legacy)
      description: "Reframe a square image to a chosen resolution. The supported image formats include JPEG, PNG, and WebP.\n\nImage links are available for a limited period of time; if you would like to keep the image, you must download it.\n"
      operationId: post_reframe_image
      requestBody:
        description: A request to reframe an image in a new resolution.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReframeImageRequest'
        required: true
        x-body-name: body
      responses:
        '200':
          description: Image re-frames generated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateImageResponse'
        '400':
          description: Invalid input provided.
        '401':
          description: Not authorized to generate an image.
        '422':
          description: Prompt or Image failed the safety checks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateImageSafetyError'
        '429':
          description: Too many requests.
      x-openapi-router-controller: external_api.generated.openapi.controllers.generate_controller
  /remix:
    post:
      tags:
        - generate
      summary: Remix (legacy)
      description: "Remix provided images synchronously based on a given prompt and optional parameters.\n\nInput images are cropped to the chosen aspect ratio before being remixed.\n\nSupported image formats include JPEG, PNG, and WebP.\n\nImages links are available for a limited period of time; if you would like to keep the image, you must download it.\n"
      operationId: post_remix_image
      requestBody:
        description: A request to remix a provided image with Ideogram. Input images are cropped to the chosen aspect ratio before being remixed.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RemixImageRequest'
            encoding:
              image_request:
                contentType: application/json
                style: form
        required: true
      responses:
        '200':
          description: Image(s) generated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateImageResponse'
        '400':
          description: Invalid input provided.
        '403':
          description: Not authorized to generate an image.
        '422':
          description: Prompt or provided image failed safety check.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateImageSafetyError'
        '429':
          description: Too many requests.
      x-openapi-router-controller: external_api.generated.openapi.controllers.generate_controller
  /upscale:
    post:
      tags:
        - generate
      summary: Upscale
      description: "Upscale provided images synchronously with an optional prompt.\n\nSupported image formats include JPEG, PNG, and WebP.\n\nImages links are available for a limited period of time; if you would like to keep the image, you must download it.\n"
      operationId: post_upscale_image
      requestBody:
        description: A request to upscale a provided image with Ideogram.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpscaleImageRequest'
            encoding:
              image_request:
                contentType: application/json
                style: form
        required: true
      responses:
        '200':
          description: Image(s) generated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateImageResponse'
        '400':
          description: Invalid input provided.
        '403':
          description: Not authorized to generate an image.
        '422':
          description: Prompt or provided image failed safety check.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateImageSafetyError'
        '429':
          description: Too many requests.
      x-fern-examples:
        - request:
            image_request:
              resemblance: 55
              detail: 90
          response:
            body:
              created: '2000-01-23T04:56:07.0000000+00:00'
              data:
                - prompt: A photo of a cat
                  resolution: 1280x800
                  is_image_safe: true
                  seed: 12345
                  url: https://ideogram.ai/api/images/ephemeral/xtdZiqPwRxqY1Y7NExFmzB.png?exp=1743867804&sig=e13e12677633f646d8531a153d20e2d3698dca9ee7661ee5ba4f3b64e7ec3f89
                  style_type: GENERAL
          code-samples:
            - sdk: curl
              code: "curl -X POST https://api.ideogram.ai/upscale \\\n  -H \"Api-Key: <apiKey>\" \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F image_file=@<file1> \\\n  -F image_request='{\n      \"resemblance\": 55,\n      \"detail\": 90\n    }'\n"
            - sdk: python
              code: "import requests\nimport json\n\nresponse = requests.post(\n  \"https://api.ideogram.ai/upscale\",\n  headers={\n    \"Api-Key\": \"<apiKey>\"\n  },\n  data={\n    \"image_request\": json.dumps({\n      \"resemblance\": 55,\n      \"detail\": 90\n    })\n  },\n  files={\n    \"image_file\": open(\"<file1>\", \"rb\")\n  }\n)\nprint(response.json())\nwith open('output.png', 'wb') as f:\n  f.write(requests.get(response.json()['data'][0]['url']).content)\n"
            - sdk: typescript
              code: "const formData = new FormData();\nformData.append('image_request', JSON.stringify({\n  resemblance: 55,\n  detail: 90\n}));\nformData.append('image_file', new Blob([fs.readFileSync(\"<file1>\")], {\n  type: 'image/png'\n}));\nconst response = await fetch('https://api.ideogram.ai/upscale', {\n  method: 'POST',\n  headers: { 'Api-Key': '<apiKey>' },\n  body: formData\n});\nconst data = await response.json();\nconsole.log(data);\n"
      x-openapi-router-controller: external_api.generated.openapi.controllers.generate_controller
  /v1/ideogram-v3/edit:
    post:
      tags:
        - generate
      summary: Edit with Ideogram 3.0
      description: "Edit a given image synchronously using the provided mask with Ideogram 3.0. The mask indicates which part of the image\nshould be edited, while the prompt and chosen style can further guide the edit.\n\nSupported image formats include JPEG, PNG, and WebP.\n\nImages links are available for a limited period of time; if you would like to keep the image, you must download it.\n"
      operationId: post_edit_image_v3
      requestBody:
        description: A request to edit an image with Ideogram 3.0.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditImageRequestV3'
            encoding:
              color_palette:
                contentType: application/json
                style: form
        required: true
        x-body-name: body
      responses:
        '200':
          description: Image edits generated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageGenerationResponseV3'
        '400':
          description: Invalid input provided.
        '401':
          description: Not authorized to generate an image.
        '422':
          description: Prompt or Initial Image failed the safety checks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateImageSafetyError'
        '429':
          description: Too many requests.
      x-fern-examples:
        - request:
            prompt: A photo of a cat wearing a hat.
          response:
            body:
              created: '2000-01-23T04:56:07.0000000+00:00'
              data:
                - prompt: A photo of a cat wearing a hat.
                  resolution: 1024x1024
                  is_image_safe: true
                  seed: 12345
                  url: https://ideogram.ai/api/images/ephemeral/xtdZiqPwRxqY1Y7NExFmzB.png?exp=1743867804&sig=e13e12677633f646d8531a153d20e2d3698dca9ee7661ee5ba4f3b64e7ec3f89
                  style_type: GENERAL
          code-samples:
            - sdk: curl
              code: "curl -X POST https://api.ideogram.ai/v1/ideogram-v3/edit \\\n  -H \"Api-Key: <apiKey>\" \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F image=@<file1> \\\n  -F mask=@<file1> \\\n  -F prompt=\"A photo of a cat wearing a hat.\" \\\n  -F rendering_speed=\"DEFAULT\"\n"
            - sdk: python
              code: "import requests\n\nresponse = requests.post(\n  \"https://api.ideogram.ai/v1/ideogram-v3/edit\",\n  headers={\n    \"Api-Key\": \"<apiKey>\"\n  },\n  data={\n    \"prompt\": \"A photo of a cat wearing a hat.\",\n    \"rendering_speed\": \"DEFAULT\"\n  },\n  files={\n    \"image\": open(\"<file1>\", \"rb\"),\n    \"mask\": open(\"<file1>\", \"rb\"),\n  }\n)\nprint(response.json())\nwith open('output.png', 'wb') as f:\n  f.write(requests.get(response.json()['data'][0]['url']).content)\n"
            - sdk: typescript
              code: "const formData = new FormData();\nformData.append('prompt', 'A photo of a cat');\nformData.append('rendering_speed', 'TURBO');\nconst response = await fetch('https://api.ideogram.ai/v1/ideogram-v3/edit', {\n  method: 'POST',\n  headers: { 'Api-Key': '<apiKey>' },\n  body: formData\n});\nconst data = await response.json();\nconsole.log(data);\n"
      x-openapi-router-controller: external_api.generated.openapi.controllers.generate_controller
  /v1/ideogram-v3/generate:
    post:
      tags:
        - generate
      summary: Generate with Ideogram 3.0
      description: "Generates images synchronously based on a given prompt and optional parameters using the Ideogram 3.0 model.\n\nImages links are available for a limited period of time; if you would like to keep the image, you must download it.\n"
      operationId: post_generate_image_v3
      requestBody:
        description: A request to generate an image with Ideogram 3.0.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenerateImageRequestV3'
            encoding:
              color_palette:
                contentType: application/json
                style: form
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateImageRequestV3'
        required: true
        x-body-name: body
      responses:
        '200':
          description: Image(s) generated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageGenerationResponseV3'
        '400':
          description: Invalid input provided.
        '401':
          description: Not authorized to generate an image.
        '422':
          description: Prompt failed the safety check.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateImageSafetyError'
        '429':
          description: Too many requests.
      x-fern-examples:
        - request:
            prompt: A photo of a cat sleeping on a couch.
            rendering_speed: TURBO
            aspect_ratio: 1x1
          response:
            body:
              created: '2000-01-23T04:56:07.0000000+00:00'
              data:
                - prompt: A photo of a cat sleeping on a couch.
                  resolution: 1024x1024
                  is_image_safe: true
                  seed: 12345
                  url: https://ideogram.ai/api/images/ephemeral/xtdZiqPwRxqY1Y7NExFmzB.png?exp=1743867804&sig=e13e12677633f646d8531a153d20e2d3698dca9ee7661ee5ba4f3b64e7ec3f89
                  style_type: GENERAL
          code-samples:
            - sdk: curl
              code: "curl -X POST https://api.ideogram.ai/v1/ideogram-v3/generate \\\n  -H \"Api-Key: <apiKey>\" \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F prompt=\"A photo of a cat sleeping on a couch.\" \\\n  -F rendering_speed=\"TURBO\"\n"
            - sdk: python
              code: "import requests\n\n# Generate with Ideogram 3.0 (POST /v1/ideogram-v3/generate)\nresponse = requests.post(\n  \"https://api.ideogram.ai/v1/ideogram-v3/generate\",\n  headers={\n    \"Api-Key\": \"<apiKey>\"\n  },\n  json={\n    \"prompt\": \"A picture of a cat\",\n    \"rendering_speed\": \"TURBO\"\n  }\n)\nprint(response.json())\nwith open('output.png', 'wb') as f:\n  f.write(requests.get(response.json()['data'][0]['url']).content)\n\n# Generate with style reference images\nresponse = requests.post(\n  \"https://api.ideogram.ai/v1/ideogram-v3/generate\",\n  headers={\n    \"Api-Key\": \"<apiKey>\"\n  },\n  data={\n    \"prompt\": \"A picture of a cat\",\n    \"aspect_ratio\": \"3x1\"\n  },\n  files=[\n    (\"style_reference_images\", open(\"style_reference_image_1.png\", \"rb\")),\n    (\"style_reference_images\", open(\"style_reference_image_2.png\", \"rb\")),\n  ]\n)\nprint(response.json())\nwith open('output.png', 'wb') as f:\n  f.write(requests.get(response.json()['data'][0]['url']).content)\n"
            - sdk: typescript
              code: "const formData = new FormData();\nformData.append('prompt', 'A photo of a cat');\nformData.append('rendering_speed', 'TURBO');\n// To add style reference images, uncomment the following lines\n// formData.append('style_reference_images', '<style_reference_image_1>');\n// formData.append('style_reference_images', '<style_reference_image_2>');\nconst response = await fetch('https://api.ideogram.ai/v1/ideogram-v3/generate', {\n  method: 'POST',\n  headers: { 'Api-Key': '<apiKey>' },\n  body: formData\n});\nconst data = await response.json();\nconsole.log(data);\n"
      x-openapi-router-controller: external_api.generated.openapi.controllers.generate_controller
  /v1/ideogram-v3/reframe:
    post:
      tags:
        - generate
      summary: Reframe with Ideogram 3.0
      description: "Reframe a square image to a chosen resolution with Ideogram 3.0. The supported image formats include JPEG, PNG, and WebP.\n\nImage links are available for a limited period of time; if you would like to keep the image, you must download it.\n"
      operationId: post_reframe_image_v3
      requestBody:
        description: A request to reframe an image in a new resolution.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReframeImageRequestV3'
            encoding:
              color_palette:
                contentType: application/json
                style: form
        required: true
        x-body-name: body
      responses:
        '200':
          description: Image re-frames generated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageGenerationResponseV3'
        '400':
          description: Invalid input provided.
        '401':
          description: Not authorized to generate an image.
        '422':
          description: Prompt or Image failed the safety checks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateImageSafetyError'
        '429':
          description: Too many requests.
      x-fern-examples:
        - request:
            resolution: 512x1536
          response:
            body:
              created: '2000-01-23T04:56:07.0000000+00:00'
              data:
                - prompt: A photo of a cat
                  resolution: 1280x800
                  is_image_safe: true
                  seed: 12345
                  url: https://ideogram.ai/api/images/ephemeral/xtdZiqPwRxqY1Y7NExFmzB.png?exp=1743867804&sig=e13e12677633f646d8531a153d20e2d3698dca9ee7661ee5ba4f3b64e7ec3f89
                  style_type: GENERAL
          code-samples:
            - sdk: curl
              code: "curl -X POST https://api.ideogram.ai/v1/ideogram-v3/reframe \\\n  -H \"Api-Key: <apiKey>\" \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F image=@<file1> \\\n  -F resolution=\"512x1536\"\n"
            - sdk: python
              code: "import requests\n\nresponse = requests.post(\n  \"https://api.ideogram.ai/v1/ideogram-v3/reframe\",\n  headers={\n    \"Api-Key\": \"<apiKey>\"\n  },\n  data={\n    \"resolution\": \"512x1536\"\n  },\n  files={\n    \"image\": open(\"<file1>\", \"rb\"),\n  }\n)\nprint(response.json())\nwith open('output.png', 'wb') as f:\n  f.write(requests.get(response.json()['data'][0]['url']).content)\n"
            - sdk: typescript
              code: "const formData = new FormData();\nformData.append('resolution', '512x1536');\nformData.append('image', '<file1>');\nconst response = await fetch('https://api.ideogram.ai/v1/ideogram-v3/reframe', {\n  method: 'POST',\n  headers: { 'Api-Key': '<apiKey>' },\n  body: formData\n});\nconst data = await response.json();\nconsole.log(data);\n"
      x-openapi-router-controller: external_api.generated.openapi.controllers.generate_controller
  /v1/ideogram-v3/remix:
    post:
      tags:
        - generate
      summary: Remix with Ideogram 3.0
      description: "Remix provided images synchronously based on a given prompt and optional parameters with the Ideogram 3.0 model.\n\nInput images are cropped to the chosen aspect ratio before being remixed.\n\nSupported image formats include JPEG, PNG, and WebP.\n\nImages links are available for a limited period of time; if you would like to keep the image, you must download it.\n"
      operationId: post_remix_image_v3
      requestBody:
        description: A request to remix an image with Ideogram 3.0.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RemixImageRequestV3'
            encoding:
              color_palette:
                contentType: application/json
                style: form
        required: true
        x-body-name: body
      responses:
        '200':
          description: Image(s) generated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageGenerationResponseV3'
        '400':
          description: Invalid input provided.
        '403':
          description: Not authorized to generate an image.
        '422':
          description: Prompt or provided image failed safety check.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateImageSafetyError'
        '429':
          description: Too many requests.
      x-fern-examples:
        - request:
            prompt: A photo of a cat
            rendering_speed: DEFAULT
            image_weight: 50
            aspect_ratio: 1x2
          response:
            body:
              created: '2000-01-23T04:56:07.0000000+00:00'
              data:
                - prompt: A photo of a cat
                  resolution: 1280x800
                  is_image_safe: true
                  seed: 12345
                  url: https://ideogram.ai/api/images/ephemeral/xtdZiqPwRxqY1Y7NExFmzB.png?exp=1743867804&sig=e13e12677633f646d8531a153d20e2d3698dca9ee7661ee5ba4f3b64e7ec3f89
                  style_type: GENERAL
          code-samples:
            - sdk: curl
              code: "curl -X POST https://api.ideogram.ai/v1/ideogram-v3/remix \\\n  -H \"Api-Key: <apiKey>\" \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F image=@<file1> \\\n  -F prompt=\"A photo of a cat\" \\\n  -F rendering_speed=\"TURBO\"\n"
            - sdk: python
              code: "import requests\n\nresponse = requests.post(\n  \"https://api.ideogram.ai/v1/ideogram-v3/remix\",\n  headers={\n    \"Api-Key\": \"<apiKey>\"\n  },\n  data={\n    \"prompt\": \"A photo of a cat\",\n    \"rendering_speed\": \"TURBO\"\n  },\n  files={\n    \"image\": open(\"<file1>\", \"rb\"),\n  }\n)\nprint(response.json())\nwith open('output.png', 'wb') as f:\n  f.write(requests.get(response.json()['data'][0]['url']).content)\n"
            - sdk: typescript
              code: "const formData = new FormData();\nformData.append('prompt', 'A photo of a cat');\nformData.append('rendering_speed', 'TURBO');\nformData.append('image', '<file1>');\nconst response = await fetch('https://api.ideogram.ai/v1/ideogram-v3/remix', {\n  method: 'POST',\n  headers: { 'Api-Key': '<apiKey>' },\n  body: formData\n});\nconst data = await response.json();\nconsole.log(data);\n"
      x-openapi-router-controller: external_api.generated.openapi.controllers.generate_controller
  /v1/ideogram-v3/replace-background:
    post:
      tags:
        - generate
      summary: Replace Background with Ideogram 3.0
      description: "Replace the background of a given image synchronously using a prompt with Ideogram 3.0. The foreground subject\nwill be identified and kept, while the background is replaced based on the prompt and chosen style.\nSupported image formats include JPEG, PNG, and WebP.\nImages links are available for a limited period of time; if you would like to keep the image, you must download it.\n"
      operationId: post_replace_background_v3
      requestBody:
        description: A request to replace the background of an image with Ideogram 3.0.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReplaceBackgroundRequestV3'
            encoding:
              color_palette:
                contentType: application/json
                style: form
        required: true
        x-body-name: body
      responses:
        '200':
          description: Background replacement generated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageGenerationResponseV3'
        '400':
          description: Invalid input provided.
        '401':
          description: Not authorized to generate an image.
        '422':
          description: Prompt or Initial Image failed the safety checks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateImageSafetyError'
        '429':
          description: Too many requests.
      x-fern-examples:
        - request:
            prompt: Add a forest in the background
            magic_prompt: ON
            rendering_speed: QUALITY
          response:
            body:
              created: '2000-01-23T04:56:07.0000000+00:00'
              data:
                - prompt: Add a forest in the background
                  resolution: 1280x800
                  is_image_safe: true
                  seed: 12345
                  url: https://ideogram.ai/api/images/ephemeral/xtdZiqPwRxqY1Y7NExFmzB.png?exp=1743867804&sig=e13e12677633f646d8531a153d20e2d3698dca9ee7661ee5ba4f3b64e7ec3f89
                  style_type: GENERAL
          code-samples:
            - sdk: curl
              code: "curl -X POST https://api.ideogram.ai/v1/ideogram-v3/replace-background \\\n  -H \"Api-Key: <apiKey>\" \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F image=@<file1> \\\n  -F prompt=\"Add a forest in the background\"\n"
            - sdk: python
              code: "import requests\n\nresponse = requests.post(\n  \"https://api.ideogram.ai/v1/ideogram-v3/replace-background\",\n  headers={\n    \"Api-Key\": \"<apiKey>\" \n  },\n  data={\n    \"prompt\": \"Add a forest in the background\",\n    \"magic_prompt\": \"ON\"\n  },\n  files={\n    \"image\": open(\"<file1>\", \"rb\"),\n  }\n)\nprint(response.json())\nwith open('output.png', 'wb') as f:\n  f.write(requests.get(response.json()['data'][0]['url']).content)\n"
            - sdk: typescript
              code: "const formData = new FormData();\nformData.append('prompt', 'Add a forest in the background');\nformData.append('image', '<file1>');\nconst response = await fetch('https://api.ideogram.ai/v1/ideogram-v3/replace-background', {\n  method: 'POST',\n  headers: { 'Api-Key': '<apiKey>' },\n  body: formData\n});\nconst data = await response.json();\nconsole.log(data);\n"
      x-openapi-router-controller: external_api.generated.openapi.controllers.generate_controller
components:
  schemas:
    DescribeResponse:
      title: DescribeResponse
      type: object
      properties:
        descriptions:
          title: descriptions
          type: array
          items:
            $ref: '#/components/schemas/Description'
          description: A collection of descriptions for given content.
      description: The response for a describe request encapsulates a list of descriptions.
      example:
        descriptions:
          - text: 'A meticulously illustrated cat with striped patterns, sitting upright. The cat''s eyes are a captivating shade of yellow, and it appears to be gazing intently at something. The background consists of abstract, swirling patterns in shades of black, white, and beige, creating an almost fluid or wavy appearance. The cat is positioned in the foreground, with the background elements fading into the distance, giving a sense of depth to the image.'
          - text: 'A meticulously illustrated cat with striped patterns, sitting upright. The cat''s eyes are a captivating shade of yellow, and it appears to be gazing intently at something. The background consists of abstract, swirling patterns in shades of black, white, and beige, creating an almost fluid or wavy appearance. The cat is positioned in the foreground, with the background elements fading into the distance, giving a sense of depth to the image.'
    DescribeRequest:
      required:
        - image_file
      type: object
      properties:
        image_file:
          type: string
          description: 'An image binary (max size 10MB); only JPEG, WebP and PNG formats are supported at this time.'
          format: binary
        describe_model_version:
          $ref: '#/components/schemas/DescribeModelVersion'
    EditImageRequest:
      required:
        - image_file
        - mask
        - model
        - prompt
      type: object
      properties:
        image_file:
          type: string
          description: 'An image binary (max size 10MB); only JPEG, WebP and PNG formats are supported at this time.'
          format: binary
        mask:
          type: string
          description: 'A black and white image of the same size as the image being edited (max size 10MB). Black regions in the mask should match up with the regions of the image that you would like to edit; only JPEG, WebP and PNG formats are supported at this time.'
          format: binary
        prompt:
          type: string
          description: The prompt used to describe the edited result.
          example: 'A serene tropical beach scene. Dominating the foreground are tall palm trees with lush green leaves, standing tall against a backdrop of a sandy beach. The beach leads to the azure waters of the sea, which gently kisses the shoreline. In the distance, there is an island or landmass with a silhouette of what appears to be a lighthouse or tower. The sky above is painted with fluffy white clouds, some of which are tinged with hues of pink and orange, suggesting either a sunrise or sunset.'
        model:
          $ref: '#/components/schemas/ModelEnum'
        magic_prompt_option:
          $ref: '#/components/schemas/MagicPromptOption'
        num_images:
          $ref: '#/components/schemas/NumImages'
        seed:
          $ref: '#/components/schemas/Seed'
        style_type:
          $ref: '#/components/schemas/StyleType'
    GenerateImageRequest:
      title: GenerateImageRequest
      required:
        - image_request
      type: object
      properties:
        image_request:
          $ref: '#/components/schemas/ImageRequest'
      example:
        image_request:
          aspect_ratio: ASPECT_10_16
          magic_prompt_option: AUTO
          model: V_2
          prompt: 'A serene tropical beach scene. Dominating the foreground are tall palm trees with lush green leaves, standing tall against a backdrop of a sandy beach. The beach leads to the azure waters of the sea, which gently kisses the shoreline. In the distance, there is an island or landmass with a silhouette of what appears to be a lighthouse or tower. The sky above is painted with fluffy white clouds, some of which are tinged with hues of pink and orange, suggesting either a sunrise or sunset.'
    GenerateImageRequestV3:
      required:
        - prompt
      type: object
      properties:
        prompt:
          type: string
          description: The prompt to use to generate the image.
          example: A photo of a cat
        seed:
          title: Seed
          maximum: 2147483647
          minimum: 0
          type: integer
          description: Random seed. Set for reproducible generation.
          example: 12345
        resolution:
          $ref: '#/components/schemas/ResolutionV3'
        aspect_ratio:
          $ref: '#/components/schemas/AspectRatioV3'
        rendering_speed:
          $ref: '#/components/schemas/RenderingSpeed'
        magic_prompt:
          $ref: '#/components/schemas/MagicPromptOption'
        negative_prompt:
          type: string
          description: "Description of what to exclude from an image. Descriptions in the prompt take precedence\nto descriptions in the negative prompt.\n"
          example: 'brush strokes, painting'
        num_images:
          maximum: 8
          minimum: 1
          type: integer
          description: Number of images to generate.
          default: 1
        color_palette:
          $ref: '#/components/schemas/ColorPaletteWithPresetNameOrMembers'
        style_codes:
          type: array
          items:
            $ref: '#/components/schemas/StyleCode'
          description: A list of 8 character hexadecimal codes representing the style of the image. Cannot be used in conjunction with style_reference_images or style_type.
          example:
            - AAFF5733
            - 0133FF57
            - DE3357FF
        style_type:
          $ref: '#/components/schemas/StyleTypeV3'
        style_reference_images:
          type: array
          items:
            type: string
            format: binary
          description: 'A set of images to use as style references (maximum total size 10MB across all style references). The images should be in JPEG, PNG or WebP format.'
    RemixImageRequestV3:
      required:
        - image
        - prompt
      type: object
      properties:
        image:
          type: string
          description: 'The image to remix binary (max size 10MB); only JPEG, WebP and PNG formats are supported at this time.'
          format: binary
        prompt:
          type: string
          description: The prompt to use to generate the image.
          example: A photo of a cat
        image_weight:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
          example: 50
        seed:
          $ref: '#/components/schemas/Seed'
        resolution:
          $ref: '#/components/schemas/ResolutionV3'
        aspect_ratio:
          $ref: '#/components/schemas/AspectRatioV3'
        rendering_speed:
          $ref: '#/components/schemas/RenderingSpeed'
        magic_prompt:
          $ref: '#/components/schemas/MagicPromptOption'
        negative_prompt:
          type: string
          description: "Description of what to exclude from an image. Descriptions in the prompt take precedence\nto descriptions in the negative prompt.\n"
          example: 'brush strokes, painting'
        num_images:
          maximum: 8
          minimum: 1
          type: integer
          description: Number of images to generate.
          default: 1
        color_palette:
          $ref: '#/components/schemas/ColorPaletteWithPresetNameOrMembers'
        style_codes:
          $ref: '#/components/schemas/StyleCodes'
        style_type:
          $ref: '#/components/schemas/StyleTypeV3'
        style_reference_images:
          type: array
          items:
            type: string
            format: binary
          description: 'A set of images to use as style references (maximum total size 10MB across all style references). The images should be in JPEG, PNG or WebP format.'
    EditImageRequestV3:
      required:
        - image
        - mask
        - prompt
      type: object
      properties:
        image:
          type: string
          description: 'The image being edited (max size 10MB); only JPEG, WebP and PNG formats are supported at this time.'
          format: binary
        mask:
          type: string
          description: 'A black and white image of the same size as the image being edited (max size 10MB). Black regions in the mask should match up with the regions of the image that you would like to edit; only JPEG, WebP and PNG formats are supported at this time.'
          format: binary
        prompt:
          type: string
          description: The prompt used to describe the edited result.
          example: A photo of a cat.
        magic_prompt:
          $ref: '#/components/schemas/MagicPromptOption'
        num_images:
          $ref: '#/components/schemas/NumImages'
        seed:
          $ref: '#/components/schemas/Seed'
        rendering_speed:
          $ref: '#/components/schemas/RenderingSpeed'
        color_palette:
          $ref: '#/components/schemas/ColorPaletteWithPresetNameOrMembers'
        style_codes:
          $ref: '#/components/schemas/StyleCodes'
        style_reference_images:
          type: array
          items:
            type: string
            format: binary
          description: 'A set of images to use as style references (maximum total size 10MB across all style references). The images should be in JPEG, PNG or WebP format.'
    ReframeImageRequestV3:
      required:
        - image
        - resolution
      type: object
      properties:
        image:
          type: string
          description: 'The image being reframed (max size 10MB); only JPEG, WebP and PNG formats are supported at this time.'
          format: binary
        resolution:
          $ref: '#/components/schemas/ResolutionV3'
        num_images:
          $ref: '#/components/schemas/NumImages'
        seed:
          $ref: '#/components/schemas/Seed'
        rendering_speed:
          $ref: '#/components/schemas/RenderingSpeed'
        color_palette:
          $ref: '#/components/schemas/ColorPaletteWithPresetNameOrMembers'
        style_codes:
          $ref: '#/components/schemas/StyleCodes'
        style_reference_images:
          type: array
          items:
            type: string
            format: binary
          description: 'A set of images to use as style references (maximum total size 10MB across all style references). The images should be in JPEG, PNG or WebP format.'
    ReplaceBackgroundRequestV3:
      required:
        - image
        - prompt
      type: object
      properties:
        image:
          type: string
          description: 'The image whose background is being replaced (max size 10MB); only JPEG, WebP and PNG formats are supported at this time.'
          format: binary
        prompt:
          type: string
          description: The prompt describing the desired new background.
          example: A vibrant cityscape at night.
        magic_prompt:
          $ref: '#/components/schemas/MagicPromptOption'
        num_images:
          $ref: '#/components/schemas/NumImages'
        seed:
          $ref: '#/components/schemas/Seed'
        rendering_speed:
          $ref: '#/components/schemas/RenderingSpeed'
        color_palette:
          $ref: '#/components/schemas/ColorPaletteWithPresetNameOrMembers'
        style_codes:
          $ref: '#/components/schemas/StyleCodes'
        style_reference_images:
          type: array
          items:
            type: string
            format: binary
          description: 'A set of images to use as style references (maximum total size 10MB across all style references). The images should be in JPEG, PNG or WebP format.'
    InternalTestingRequest:
      required:
        - required_date_type_field
      type: object
      properties:
        x_position:
          type: integer
          nullable: true
        image_file:
          type: string
          description: 'An image binary (max size 10MB); only JPEG, WebP and PNG formats are supported at this time.'
          format: binary
        another_image_file:
          type: string
          description: 'An image binary (max size 10MB); only JPEG, WebP and PNG formats are supported at this time.'
          format: binary
        some_text:
          type: string
        nested_object:
          $ref: '#/components/schemas/InternalTestingNestedObject'
        nested_object_required_fields:
          $ref: '#/components/schemas/InternalTestingNestedObjectRequiredFields'
        date_type_field:
          type: string
          format: date
        required_date_type_field:
          type: string
          format: date
        date_time_type_field:
          type: string
          format: date-time
        repeated_primitive_field:
          type: array
          items:
            type: string
        repeated_complex_field:
          type: array
          items:
            $ref: '#/components/schemas/InternalTestingNestedObject'
        enum_type_field:
          $ref: '#/components/schemas/InternalTestingEnumField'
    InternalTestingEnumField:
      title: InternalTestingEnumField
      enum:
        - EIN
        - ZWEI
        - DREI
      type: string
    InternalTestingNestedObject:
      title: InternalTestingNestedObject
      type: object
      properties:
        prop_one:
          title: prop_one
          type: string
        prop_two:
          title: prop_two
          type: string
    InternalTestingNestedObjectRequiredFields:
      title: InternalTestingNestedObjectRequiredFields
      required:
        - prop_one
        - prop_two
      type: object
      properties:
        prop_one:
          title: prop_one
          type: string
        prop_two:
          title: prop_two
          type: string
    RemixImageRequest:
      required:
        - image_file
        - image_request
      type: object
      properties:
        image_request:
          $ref: '#/components/schemas/InitialImageRequest'
        image_file:
          type: string
          description: 'An image binary (max size 10MB); only JPEG, WebP and PNG formats are supported at this time.'
          format: binary
      description: 'A request to generate an image from a source image and a provided caption, provided images are cropped to match the chosen output aspect ratio.'
    ReframeImageRequest:
      required:
        - image_file
        - model
        - resolution
      type: object
      properties:
        image_file:
          type: string
          description: 'The image being reframed (max size 10MB); only JPEG, WebP and PNG formats are supported at this time.'
          format: binary
        resolution:
          $ref: '#/components/schemas/Resolution'
        model:
          $ref: '#/components/schemas/ModelEnum'
        num_images:
          $ref: '#/components/schemas/NumImages'
        seed:
          $ref: '#/components/schemas/Seed'
        style_type:
          $ref: '#/components/schemas/StyleType'
    UpscaleImageRequest:
      required:
        - image_file
        - image_request
      type: object
      properties:
        image_request:
          $ref: '#/components/schemas/UpscaleInitialImageRequest'
        image_file:
          type: string
          description: 'An image binary (max size 10MB); only JPEG, WebP and PNG formats are supported at this time.'
          format: binary
    ImageRequest:
      title: ImageRequest
      required:
        - prompt
      type: object
      properties:
        prompt:
          type: string
          description: The prompt to use to generate the image.
          example: 'A serene tropical beach scene. Dominating the foreground are tall palm trees with lush green leaves, standing tall against a backdrop of a sandy beach. The beach leads to the azure waters of the sea, which gently kisses the shoreline. In the distance, there is an island or landmass with a silhouette of what appears to be a lighthouse or tower. The sky above is painted with fluffy white clouds, some of which are tinged with hues of pink and orange, suggesting either a sunrise or sunset.'
        aspect_ratio:
          $ref: '#/components/schemas/AspectRatio'
        model:
          $ref: '#/components/schemas/ModelEnum'
        magic_prompt_option:
          $ref: '#/components/schemas/MagicPromptOption'
        magic_prompt_version:
          $ref: '#/components/schemas/MagicPromptVersionEnum'
        seed:
          title: Seed
          maximum: 2147483647
          minimum: 0
          type: integer
          description: Random seed. Set for reproducible generation.
          example: 12345
        style_type:
          $ref: '#/components/schemas/StyleType'
        negative_prompt:
          type: string
          description: 'Only available for model versions V_1, V_1_TURBO, V_2 and V_2_TURBO. Description of what to exclude from an image. Descriptions in the prompt take precedence to descriptions in the negative prompt.'
          example: 'brush strokes, painting'
        num_images:
          title: num_images
          maximum: 8
          minimum: 1
          type: integer
          description: The number of images to generate.
          default: 1
        resolution:
          $ref: '#/components/schemas/Resolution'
        color_palette:
          $ref: '#/components/schemas/ColorPaletteWithPresetNameOrMembers'
      example:
        aspect_ratio: ASPECT_10_16
        magic_prompt_option: AUTO
        model: V_2
        prompt: 'A serene tropical beach scene. Dominating the foreground are tall palm trees with lush green leaves, standing tall against a backdrop of a sandy beach. The beach leads to the azure waters of the sea, which gently kisses the shoreline. In the distance, there is an island or landmass with a silhouette of what appears to be a lighthouse or tower. The sky above is painted with fluffy white clouds, some of which are tinged with hues of pink and orange, suggesting either a sunrise or sunset.'
    InitialImageRequest:
      title: InitialImageRequest
      type: object
      allOf:
        - $ref: '#/components/schemas/ImageRequest'
      properties:
        image_weight:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
          example: 50
      description: A request to generate a new image using a provided image and a prompt.
      example:
        aspect_ratio: ASPECT_10_16
        magic_prompt_option: ON
        model: V_2
        prompt: 'A serene tropical beach scene. Dominating the foreground are tall palm trees with lush green leaves, standing tall against a backdrop of a sandy beach. The beach leads to the azure waters of the sea, which gently kisses the shoreline. In the distance, there is an island or landmass with a silhouette of what appears to be a lighthouse or tower. The sky above is painted with fluffy white clouds, some of which are tinged with hues of pink and orange, suggesting either a sunrise or sunset.'
        image_weight: 50
    UpscaleInitialImageRequest:
      title: UpscaleInitialImageRequest
      type: object
      properties:
        prompt:
          title: prompt
          type: string
          description: An optional prompt to guide the upscale
          example: 'A serene tropical beach scene. Dominating the foreground are tall palm trees with lush green leaves, standing tall against a backdrop of a sandy beach. The beach leads to the azure waters of the sea, which gently kisses the shoreline. In the distance, there is an island or landmass with a silhouette of what appears to be a lighthouse or tower. The sky above is painted with fluffy white clouds, some of which are tinged with hues of pink and orange, suggesting either a sunrise or sunset.'
        resemblance:
          title: resemblance
          maximum: 100
          minimum: 1
          type: integer
          default: 50
          example: 50
        detail:
          title: detail
          maximum: 100
          minimum: 1
          type: integer
          default: 50
          example: 50
        magic_prompt_option:
          $ref: '#/components/schemas/MagicPromptOption'
        magic_prompt_version:
          $ref: '#/components/schemas/MagicPromptVersionEnum'
        num_images:
          title: num_images
          maximum: 8
          minimum: 1
          type: integer
          description: The number of images to generate.
          default: 1
        seed:
          title: Seed
          maximum: 2147483647
          minimum: 0
          type: integer
          description: Random seed. Set for reproducible generation.
          example: 12345
      description: A request to upscale a provided image with the help of an optional prompt.
    GenerateImageResponse:
      title: GenerateImageResponse
      required:
        - created
        - data
      type: object
      properties:
        created:
          title: created
          type: string
          description: The time the request was created.
          format: date-time
        data:
          title: data
          type: array
          items:
            $ref: '#/components/schemas/ImageObject'
          description: A list of ImageObjects that contain the generated image(s).
      description: "The response which contains information about the generated image, including the download link.\nImages links are available for a limited period of time; if you would like to keep the image, you must download it."
      example:
        data:
          - style_type: REALISTIC
            seed: 12345
            prompt: 'A serene tropical beach scene. Dominating the foreground are tall palm trees with lush green leaves, standing tall against a backdrop of a sandy beach. The beach leads to the azure waters of the sea, which gently kisses the shoreline. In the distance, there''s an island or landmass with a silhouette of what appears to be a lighthouse or tower. The sky above is painted with fluffy white clouds, some of which are tinged with hues of pink and orange, suggesting either a sunrise or sunset.'
            resolution: 1024x1024
            url: https://ideogram.ai/api/images/direct/8YEpFzHuS-S6xXEGmCsf7g
            is_image_safe: true
          - style_type: REALISTIC
            seed: 12345
            prompt: 'A serene tropical beach scene. Dominating the foreground are tall palm trees with lush green leaves, standing tall against a backdrop of a sandy beach. The beach leads to the azure waters of the sea, which gently kisses the shoreline. In the distance, there''s an island or landmass with a silhouette of what appears to be a lighthouse or tower. The sky above is painted with fluffy white clouds, some of which are tinged with hues of pink and orange, suggesting either a sunrise or sunset.'
            resolution: 1024x1024
            url: https://ideogram.ai/api/images/direct/8YEpFzHuS-S6xXEGmCsf7g
            is_image_safe: true
        created: '2000-01-23T04:56:07.0000000+00:00'
    ImageGenerationResponseV3:
      title: ImageGenerationResponseV3
      required:
        - created
        - data
      type: object
      properties:
        created:
          title: created
          type: string
          description: The time the request was created.
          format: date-time
        data:
          title: data
          type: array
          items:
            $ref: '#/components/schemas/ImageGenerationObjectV3'
          description: A list of ImageObjects that contain the generated image(s).
      description: "The response which contains information about the generated image, including the download link.\nImages links are available for a limited period of time; if you would like to keep the image, you must download it."
      example:
        data:
          - style_type: GENERAL
            seed: 12345
            prompt: 'A serene tropical beach scene. Dominating the foreground are tall palm trees with lush green leaves, standing tall against a backdrop of a sandy beach. The beach leads to the azure waters of the sea, which gently kisses the shoreline. In the distance, there''s an island or landmass with a silhouette of what appears to be a lighthouse or tower. The sky above is painted with fluffy white clouds, some of which are tinged with hues of pink and orange, suggesting either a sunrise or sunset.'
            resolution: 1280x800
            url: https://ideogram.ai/api/images/ephemeral/xtdZiqPwRxqY1Y7NExFmzB.png?exp=1743867804&sig=e13e12677633f646d8531a153d20e2d3698dca9ee7661ee5ba4f3b64e7ec3f89
            is_image_safe: true
          - style_type: GENERAL
            seed: 12345
            prompt: 'A serene tropical beach scene. Dominating the foreground are tall palm trees with lush green leaves, standing tall against a backdrop of a sandy beach. The beach leads to the azure waters of the sea, which gently kisses the shoreline. In the distance, there''s an island or landmass with a silhouette of what appears to be a lighthouse or tower. The sky above is painted with fluffy white clouds, some of which are tinged with hues of pink and orange, suggesting either a sunrise or sunset.'
            resolution: 1280x800
            url: https://ideogram.ai/api/images/ephemeral/xtdZiqPwRxqY1Y7NExFmzB.png?exp=1743867804&sig=e13e12677633f646d8531a153d20e2d3698dca9ee7661ee5ba4f3b64e7ec3f89
            is_image_safe: true
        created: '2000-01-23T04:56:07.0000000+00:00'
    ImageGenerationObjectV3:
      title: ImageGenerationObjectV3
      required:
        - is_image_safe
        - prompt
        - resolution
        - seed
      type: object
      properties:
        url:
          title: url
          type: string
          description: The direct link to the image generated.
          format: uri
          nullable: true
          example: https://ideogram.ai/api/images/ephemeral/xtdZiqPwRxqY1Y7NExFmzB.png?exp=1743867804&sig=e13e12677633f646d8531a153d20e2d3698dca9ee7661ee5ba4f3b64e7ec3f89
        prompt:
          title: prompt
          type: string
          description: The prompt used for the generation. This may be different from the original prompt.
          example: 'A serene tropical beach scene. Dominating the foreground are tall palm trees with lush green leaves, standing tall against a backdrop of a sandy beach. The beach leads to the azure waters of the sea, which gently kisses the shoreline. In the distance, there''s an island or landmass with a silhouette of what appears to be a lighthouse or tower. The sky above is painted with fluffy white clouds, some of which are tinged with hues of pink and orange, suggesting either a sunrise or sunset.'
        resolution:
          $ref: '#/components/schemas/ResolutionV3'
        is_image_safe:
          title: is_image_safe
          type: boolean
          description: 'Whether this request passes safety checks. If false, the url field will be empty.'
        seed:
          title: Seed
          maximum: 2147483647
          minimum: 0
          type: integer
          description: Random seed. Set for reproducible generation.
          example: 12345
        style_type:
          $ref: '#/components/schemas/StyleTypeV3'
      example:
        style_type: GENERAL
        seed: 12345
        prompt: 'A serene tropical beach scene. Dominating the foreground are tall palm trees with lush green leaves, standing tall against a backdrop of a sandy beach. The beach leads to the azure waters of the sea, which gently kisses the shoreline. In the distance, there''s an island or landmass with a silhouette of what appears to be a lighthouse or tower. The sky above is painted with fluffy white clouds, some of which are tinged with hues of pink and orange, suggesting either a sunrise or sunset.'
        resolution: 1280x800
        url: https://ideogram.ai/api/images/ephemeral/xtdZiqPwRxqY1Y7NExFmzB.png?exp=1743867804&sig=e13e12677633f646d8531a153d20e2d3698dca9ee7661ee5ba4f3b64e7ec3f89
        is_image_safe: true
    ImageObject:
      title: ImageObject
      required:
        - is_image_safe
        - prompt
        - resolution
        - seed
      type: object
      properties:
        url:
          title: url
          type: string
          description: The direct link to the image generated.
          format: uri
          nullable: true
          example: https://ideogram.ai/api/images/direct/8YEpFzHuS-S6xXEGmCsf7g
        prompt:
          title: prompt
          type: string
          description: The prompt used for the generation. This may be different from the original prompt.
          example: 'A serene tropical beach scene. Dominating the foreground are tall palm trees with lush green leaves, standing tall against a backdrop of a sandy beach. The beach leads to the azure waters of the sea, which gently kisses the shoreline. In the distance, there''s an island or landmass with a silhouette of what appears to be a lighthouse or tower. The sky above is painted with fluffy white clouds, some of which are tinged with hues of pink and orange, suggesting either a sunrise or sunset.'
        resolution:
          title: resolution
          type: string
          description: The resolution of the final image.
          example: 1024x1024
        is_image_safe:
          title: is_image_safe
          type: boolean
          description: 'Whether this request passes safety checks. If false, the url field will be empty.'
        seed:
          title: Seed
          maximum: 2147483647
          minimum: 0
          type: integer
          description: Random seed. Set for reproducible generation.
          example: 12345
        style_type:
          $ref: '#/components/schemas/StyleType'
      example:
        style_type: REALISTIC
        seed: 12345
        prompt: 'A serene tropical beach scene. Dominating the foreground are tall palm trees with lush green leaves, standing tall against a backdrop of a sandy beach. The beach leads to the azure waters of the sea, which gently kisses the shoreline. In the distance, there''s an island or landmass with a silhouette of what appears to be a lighthouse or tower. The sky above is painted with fluffy white clouds, some of which are tinged with hues of pink and orange, suggesting either a sunrise or sunset.'
        resolution: 1024x1024
        url: https://ideogram.ai/api/images/direct/8YEpFzHuS-S6xXEGmCsf7g
        is_image_safe: true
    MagicPromptVersionEnum:
      title: MagicPromptVersionEnum
      enum:
        - V_0
        - V_0_1
        - V_0_2
      type: string
      description: The magic prompt version to use when magic prompt option is set to AUTO or ON.
      example: V_0
    ModelEnum:
      title: ModelEnum
      enum:
        - V_1
        - V_1_TURBO
        - V_2
        - V_2_TURBO
        - V_2A
        - V_2A_TURBO
        - V_3
      type: string
      description: 'The model used to generate an image or edit one. /generate and /remix supports all model types, however, /edit is only supported for V_2 and V_2_TURBO.'
      default: V_2
      example: V_2_TURBO
    GenerateImageSafetyError:
      title: GenerateImageSafetyError
      required:
        - error
      type: object
      properties:
        error:
          title: error
          type: string
          example: Prompt provided failed safety check due to the inclusion of prohibited content.
      example:
        error: Prompt provided failed safety check due to the inclusion of prohibited content.
    ImageSafetyError:
      title: ImageSafetyError
      required:
        - error
      type: object
      properties:
        error:
          title: error
          type: string
          example: Image provided failed safety check due to the inclusion of prohibited content.
      example:
        error: Image provided failed safety check due to the inclusion of prohibited content.
    ManageApiSubscriptionResponse:
      title: ManageApiSubscriptionResponse
      required:
        - has_accepted_terms
        - has_stripe_setup
      type: object
      properties:
        has_accepted_terms:
          title: has_accepted_terms
          type: boolean
          description: Whether or not the latest required terms have been accepted.
        has_stripe_setup:
          title: has_stripe_setup
          type: boolean
          description: Whether or not Stripe is setup for API usage.
        metronome_dashboard_url:
          title: metronome_dashboard_url
          type: string
          description: The URL to display the customer usage dashboard.
          deprecated: true
        metronome_dashboard_dark_mode_url:
          title: metronome_dashboard_dark_mode_url
          type: string
          description: 'The URL to display the customer usage dashboard, in dark mode.'
          deprecated: true
        metronome_links:
          $ref: '#/components/schemas/MetronomeLinks'
        recharge_settings:
          $ref: '#/components/schemas/RechargeSettingsResponse'
        stripe_billing_url:
          title: stripe_billing_url
          type: string
          description: The URL for the user to manage the existing Stripe subscription plan.
      example:
        recharge_settings:
          is_active: true
        has_stripe_setup: true
        metronome_dashboard_dark_mode_url: metronome_dashboard_dark_mode_url
        stripe_billing_url: stripe_billing_url
        has_accepted_terms: true
        metronome_dashboard_url: metronome_dashboard_url
        metronome_links:
          usage_iframe_url: usage_iframe_url
          usage_iframe_dark_mode_url: usage_iframe_dark_mode_url
          credits_iframe_dark_mode_url: credits_iframe_dark_mode_url
          invoices_iframe_dark_mode_url: invoices_iframe_dark_mode_url
          invoices_iframe_url: invoices_iframe_url
          credits_iframe_url: credits_iframe_url
    MetronomeLinks:
      title: MetronomeLinks
      type: object
      properties:
        invoices_iframe_url:
          title: invoices_iframe_url
          type: string
          description: The URL to display the customer invoice and API usage.
        invoices_iframe_dark_mode_url:
          title: invoices_iframe_dark_mode_url
          type: string
          description: The URL to display the customer invoice and API usage.
        credits_iframe_url:
          title: credits_iframe_url
          type: string
          description: The URL to display the customer invoice and API usage.
        credits_iframe_dark_mode_url:
          title: credits_iframe_dark_mode_url
          type: string
          description: The URL to display the customer invoice and API usage.
        usage_iframe_url:
          title: usage_iframe_url
          type: string
          description: The URL to display the customer usage dashboard.
        usage_iframe_dark_mode_url:
          title: usage_iframe_dark_mode_url
          type: string
          description: 'The URL to display the customer usage dashboard, in dark mode.'
      example:
        usage_iframe_url: usage_iframe_url
        usage_iframe_dark_mode_url: usage_iframe_dark_mode_url
        credits_iframe_dark_mode_url: credits_iframe_dark_mode_url
        invoices_iframe_dark_mode_url: invoices_iframe_dark_mode_url
        invoices_iframe_url: invoices_iframe_url
        credits_iframe_url: credits_iframe_url
    RechargeSettingsResponse:
      title: RechargeSettingsResponse
      required:
        - is_active
      allOf:
        - $ref: '#/components/schemas/RechargeSettings'
      properties:
        is_active:
          title: is_active
          type: boolean
          description: Whether or not the recharge setting is currently active.
      example:
        is_active: true
    RechargeSettings:
      title: RechargeSettings
      required:
        - minimum_balance_threshold
        - top_up_balance
      type: object
      properties:
        top_up_balance:
          $ref: '#/components/schemas/Price'
        minimum_balance_threshold:
          $ref: '#/components/schemas/Price'
      description: The current recharge settings for the API subscription.
      example:
        minimum_balance_threshold:
          amount: 1050
          currency_code: USD
        top_up_balance:
          amount: 1050
          currency_code: USD
    PostApiSubscriptionResponse:
      title: PostApiSubscriptionResponse
      type: object
      properties:
        recharge_settings:
          $ref: '#/components/schemas/RechargeSettingsResponse'
      description: The updated API subscription.
      example:
        recharge_settings:
          is_active: true
    PostApiSubscriptionError:
      title: PostApiSubscriptionError
      type: object
      properties:
        messages:
          title: messages
          type: array
          items:
            type: string
            description: 'An error message, indicating what went wrong.'
          description: Error messages about what the error could be.
      description: Represents an error when attempting to update the API subscription.
      example:
        messages:
          - messages
          - messages
    PostApiSubscriptionRequest:
      title: PostApiSubscriptionRequest
      type: object
      properties:
        recharge_settings:
          $ref: '#/components/schemas/RechargeSettings'
      description: Request to update API settings. Fields which are omitted will be ignored.
      example:
        recharge_settings:
          minimum_balance_threshold:
            amount: 1050
            currency_code: USD
          top_up_balance:
            amount: 1050
            currency_code: USD
    PostApiReactivateResponse:
      title: PostApiReactivateResponse
      type: object
      properties:
        recharge_settings:
          $ref: '#/components/schemas/RechargeSettingsResponse'
      description: Response to re-activating API settings.
      example:
        recharge_settings:
          is_active: true
    GetApiKeysResponse:
      title: GetApiKeysResponse
      type: object
      properties:
        current_api_keys:
          title: current_api_keys
          type: array
          items:
            $ref: '#/components/schemas/RedactedApiKey'
          description: The current API keys that are active. Only returns redacted keys.
      example:
        current_api_keys:
          - creation_time: '2000-01-23T04:56:07.0000000+00:00'
            redacted_api_key: vkpDja
            api_key_id: JRPVD7jWR1aTBYiJ0UFVOg==
          - creation_time: '2000-01-23T04:56:07.0000000+00:00'
            redacted_api_key: vkpDja
            api_key_id: JRPVD7jWR1aTBYiJ0UFVOg==
    RedactedApiKey:
      title: RedactedApiKey
      required:
        - api_key_id
        - creation_time
        - redacted_api_key
      type: object
      properties:
        redacted_api_key:
          title: redacted_api_key
          type: string
          description: A redacted text snippet of the API key. Contains the first 4 characters of the API key
          example: vkpDja
        creation_time:
          title: creation_time
          type: string
          description: The time at which the key was created
          format: date-time
        api_key_id:
          title: api_key_id
          type: string
          description: A URL safe base64 encoded UUID
          example: JRPVD7jWR1aTBYiJ0UFVOg==
      description: A representation of an API key that does not contain the full key.
      example:
        creation_time: '2000-01-23T04:56:07.0000000+00:00'
        redacted_api_key: vkpDja
        api_key_id: JRPVD7jWR1aTBYiJ0UFVOg==
    PostApiKeyResponse:
      title: PostApiKeyResponse
      required:
        - api_key
        - api_key_id
      type: object
      properties:
        api_key:
          title: api_key
          type: string
          description: The API key to use when making authenticated requests with the API. This key will only be shown once.
          example: vkpDjaKdMNR8QJ83GjfNvFZJbnoi65XUp70MgZNtA2H9XE8yfDnmr_6BaRyQkF9hnJzu6mUPRLBmqlnZMwetJA
        api_key_id:
          title: api_key_id
          type: string
          description: The ID of the API key. A URL safe base64 encoded UUID
          example: JRPVD7jWR1aTBYiJ0UFVOg==
      example:
        api_key: vkpDjaKdMNR8QJ83GjfNvFZJbnoi65XUp70MgZNtA2H9XE8yfDnmr_6BaRyQkF9hnJzu6mUPRLBmqlnZMwetJA
        api_key_id: JRPVD7jWR1aTBYiJ0UFVOg==
    ManageApiStripeSubscriptionResponse:
      title: ManageApiStripeSubscriptionResponse
      type: object
      properties:
        stripe_subscription_url:
          title: stripe_subscription_url
          type: string
          description: The URL for the user to checkout the Stripe subscription plan.
        stripe_billing_url:
          title: stripe_billing_url
          type: string
          description: DEPRECATED. The URL for the user to manage the existing Stripe subscription plan. Get this from ManageApiSubscriptionResponse instead.
          deprecated: true
      example:
        stripe_subscription_url: stripe_subscription_url
        stripe_billing_url: stripe_billing_url
    GetApiTermsResponse:
      title: GetApiTermsResponse
      required:
        - api_terms
      type: object
      properties:
        api_terms:
          $ref: '#/components/schemas/ApiTerms'
      example:
        api_terms:
          terms_url: terms_url
          terms_id: terms_id
    ApiTerms:
      title: ApiTerms
      required:
        - terms_id
        - terms_url
      type: object
      properties:
        terms_id:
          title: terms_id
          type: string
          description: The ID of the terms.
        terms_url:
          title: terms_url
          type: string
          description: The URL where the terms are hosted.
      example:
        terms_url: terms_url
        terms_id: terms_id
    PostApiTermsRequest:
      title: PostApiTermsRequest
      required:
        - terms_id
      type: object
      properties:
        terms_id:
          title: terms_id
          type: string
          description: The ID of the terms which are being accepted.
          example: TOS_2024_04_20
      example:
        terms_id: TOS_2024_04_20
    PostAddCreditsResponse:
      title: PostAddCreditsResponse
      required:
        - amount
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Price'
      example:
        amount:
          amount: 1050
          currency_code: USD
    PostAddCreditsError:
      title: PostAddCreditsError
      type: object
      properties:
        messages:
          title: messages
          type: array
          items:
            type: string
            description: 'An error message, indicating what went wrong.'
          description: Error messages about what the error could be.
      description: Represents an error when attempting to add credits to an API user's account.
      example:
        messages:
          - messages
          - messages
    PostAddCreditsRequest:
      title: PostAddCreditsRequest
      required:
        - amount
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Price'
      example:
        amount:
          amount: 1050
          currency_code: USD
    Description:
      title: Description
      type: object
      properties:
        text:
          title: text
          type: string
          description: The generated description for the provided image.
          example: 'A meticulously illustrated cat with striped patterns, sitting upright. The cat''s eyes are a captivating shade of yellow, and it appears to be gazing intently at something. The background consists of abstract, swirling patterns in shades of black, white, and beige, creating an almost fluid or wavy appearance. The cat is positioned in the foreground, with the background elements fading into the distance, giving a sense of depth to the image.'
      example:
        text: 'A meticulously illustrated cat with striped patterns, sitting upright. The cat''s eyes are a captivating shade of yellow, and it appears to be gazing intently at something. The background consists of abstract, swirling patterns in shades of black, white, and beige, creating an almost fluid or wavy appearance. The cat is positioned in the foreground, with the background elements fading into the distance, giving a sense of depth to the image.'
    DescribeModelVersion:
      title: DescribeModelVersion
      enum:
        - V_2
        - V_3
      type: string
      description: 'The model version to use for describing images. V_2 uses the current describe model, V_3 uses the new captioner model.'
    MagicPromptOption:
      title: MagicPromptOption
      enum:
        - AUTO
        - ON
        - OFF
      type: string
      description: Determine if MagicPrompt should be used in generating the request or not.
      externalDocs:
        url: https://docs.ideogram.ai/using-ideogram/ideogram-features/magic-prompt
      example: ON
    NumImages:
      title: num_images
      maximum: 8
      minimum: 1
      type: integer
      description: The number of images to generate.
      default: 1
    Seed:
      title: Seed
      maximum: 2147483647
      minimum: 0
      type: integer
      description: Random seed. Set for reproducible generation.
      example: 12345
    StyleType:
      title: StyleType
      enum:
        - AUTO
        - GENERAL
        - REALISTIC
        - DESIGN
        - RENDER_3D
        - ANIME
        - CUSTOM
      type: string
      description: The style type to generate with; this is only applicable for models V_2 and above and should not be specified for model versions V_1.
      example: REALISTIC
    ResolutionV3:
      title: ResolutionV3
      enum:
        - 512x1536
        - 576x1408
        - 576x1472
        - 576x1536
        - 640x1344
        - 640x1408
        - 640x1472
        - 640x1536
        - 704x1152
        - 704x1216
        - 704x1280
        - 704x1344
        - 704x1408
        - 704x1472
        - 736x1312
        - 768x1088
        - 768x1216
        - 768x1280
        - 768x1344
        - 800x1280
        - 832x960
        - 832x1024
        - 832x1088
        - 832x1152
        - 832x1216
        - 832x1248
        - 864x1152
        - 896x960
        - 896x1024
        - 896x1088
        - 896x1120
        - 896x1152
        - 960x832
        - 960x896
        - 960x1024
        - 960x1088
        - 1024x832
        - 1024x896
        - 1024x960
        - 1024x1024
        - 1088x768
        - 1088x832
        - 1088x896
        - 1088x960
        - 1120x896
        - 1152x704
        - 1152x832
        - 1152x864
        - 1152x896
        - 1216x704
        - 1216x768
        - 1216x832
        - 1248x832
        - 1280x704
        - 1280x768
        - 1280x800
        - 1312x736
        - 1344x640
        - 1344x704
        - 1344x768
        - 1408x576
        - 1408x640
        - 1408x704
        - 1472x576
        - 1472x640
        - 1472x704
        - 1536x512
        - 1536x576
        - 1536x640
      type: string
      description: The resolutions supported for Ideogram 3.0.
      example: 1280x800
    AspectRatioV3:
      title: AspectRatioV3
      enum:
        - 1x3
        - 3x1
        - 1x2
        - 2x1
        - 9x16
        - 16x9
        - 10x16
        - 16x10
        - 2x3
        - 3x2
        - 3x4
        - 4x3
        - 4x5
        - 5x4
        - 1x1
      type: string
      description: 'The aspect ratio to use for image generation, which determines the image''s resolution. Cannot be used in conjunction with resolution. Defaults to 1x1.'
    RenderingSpeed:
      title: RenderingSpeed
      enum:
        - FLASH
        - TURBO
        - BALANCED
        - DEFAULT
        - QUALITY
      type: string
      description: The rendering speed to use.
      default: DEFAULT
    ColorPaletteWithPresetNameOrMembers:
      title: ColorPaletteWithPresetNameOrMembers
      oneOf:
        - $ref: '#/components/schemas/ColorPaletteWithPresetName'
        - $ref: '#/components/schemas/ColorPaletteWithMembers'
      description: 'A color palette for generation, must EITHER be specified via one of the presets (name) or explicitly via hexadecimal representations of the color with optional weights (members). Not supported by V_1, V_1_TURBO, V_2A and V_2A_TURBO models.'
    ColorPaletteWithPresetName:
      title: ColorPaletteWithPresetName
      required:
        - name
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ColorPalettePresetName'
    ColorPalettePresetName:
      title: ColorPalettePresetName
      enum:
        - EMBER
        - FRESH
        - JUNGLE
        - MAGIC
        - MELON
        - MOSAIC
        - PASTEL
        - ULTRAMARINE
      type: string
      description: A color palette preset value.
      example: PASTEL
    ColorPaletteWithMembers:
      title: ColorPaletteWithMembers
      required:
        - members
      type: object
      properties:
        members:
          title: ColorPaletteMembers
          maxItems: 8
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ColorPaletteMember'
          description: "A list of ColorPaletteMembers that define the color palette. Each color palette member\nconsists of a required color hex and an optional weight between 0.05 and 1.0 (inclusive).\nIt is recommended that these weights descend from highest to lowest for the color hexes provided.\n"
          example:
            - ColorPaletteMember:
                color_hex: '#b470b3'
                color_weight: 0.49
            - ColorPaletteMember:
                color_hex: '#7a79e3'
                color_weight: 0.16
            - ColorPaletteMember:
                color_hex: '#a26563'
                color_weight: 0.1
            - ColorPaletteMember:
                color_hex: '#5c7d76'
                color_weight: 0.07
            - ColorPaletteMember:
                color_hex: '#642a9c'
                color_weight: 0.05
      description: A color palette represented only via its members. Cannot be used in conjunction with preset name.
    ColorPaletteMembers:
      title: ColorPaletteMembers
      maxItems: 8
      minItems: 1
      type: array
      items:
        $ref: '#/components/schemas/ColorPaletteMember'
      description: "A list of ColorPaletteMembers that define the color palette. Each color palette member\nconsists of a required color hex and an optional weight between 0.05 and 1.0 (inclusive).\nIt is recommended that these weights descend from highest to lowest for the color hexes provided.\n"
      example:
        - ColorPaletteMember:
            color_hex: '#b470b3'
            color_weight: 0.49
        - ColorPaletteMember:
            color_hex: '#7a79e3'
            color_weight: 0.16
        - ColorPaletteMember:
            color_hex: '#a26563'
            color_weight: 0.1
        - ColorPaletteMember:
            color_hex: '#5c7d76'
            color_weight: 0.07
        - ColorPaletteMember:
            color_hex: '#642a9c'
            color_weight: 0.05
    ColorPaletteMember:
      title: ColorPaletteMember
      required:
        - color_hex
      type: object
      properties:
        color_hex:
          title: color_hex
          pattern: '^#(?:[0-9a-fA-F]{3}){1,2}$'
          type: string
          description: The hexadecimal representation of the color with an optional chosen weight.
          example: '#FFFFFF'
        color_weight:
          title: color_weight
          maximum: 1.0
          minimum: 0.05
          type: number
          description: The weight of the color in the color palette.
          example: 0.25
      description: A member of a color palette.
    StyleCodes:
      type: array
      items:
        $ref: '#/components/schemas/StyleCode'
      description: A list of 8 character hexadecimal codes representing the style of the image. Cannot be used in conjunction with style_reference_images or style_type.
      example:
        - AAFF5733
        - 0133FF57
        - DE3357FF
    StyleCode:
      pattern: '^[0-9a-fA-F]{8}$'
      type: string
      description: The 8 character hexadecimal representation of the style code.
      example: ABCD1234
    StyleTypeV3:
      title: StyleTypeV3
      enum:
        - AUTO
        - GENERAL
        - REALISTIC
        - DESIGN
        - CUSTOM
      type: string
      description: The style type to generate with.
      default: GENERAL
      example: GENERAL
    Resolution:
      title: Resolution
      enum:
        - RESOLUTION_512_1536
        - RESOLUTION_576_1408
        - RESOLUTION_576_1472
        - RESOLUTION_576_1536
        - RESOLUTION_640_1024
        - RESOLUTION_640_1344
        - RESOLUTION_640_1408
        - RESOLUTION_640_1472
        - RESOLUTION_640_1536
        - RESOLUTION_704_1152
        - RESOLUTION_704_1216
        - RESOLUTION_704_1280
        - RESOLUTION_704_1344
        - RESOLUTION_704_1408
        - RESOLUTION_704_1472
        - RESOLUTION_720_1280
        - RESOLUTION_736_1312
        - RESOLUTION_768_1024
        - RESOLUTION_768_1088
        - RESOLUTION_768_1152
        - RESOLUTION_768_1216
        - RESOLUTION_768_1232
        - RESOLUTION_768_1280
        - RESOLUTION_768_1344
        - RESOLUTION_832_960
        - RESOLUTION_832_1024
        - RESOLUTION_832_1088
        - RESOLUTION_832_1152
        - RESOLUTION_832_1216
        - RESOLUTION_832_1248
        - RESOLUTION_864_1152
        - RESOLUTION_896_960
        - RESOLUTION_896_1024
        - RESOLUTION_896_1088
        - RESOLUTION_896_1120
        - RESOLUTION_896_1152
        - RESOLUTION_960_832
        - RESOLUTION_960_896
        - RESOLUTION_960_1024
        - RESOLUTION_960_1088
        - RESOLUTION_1024_640
        - RESOLUTION_1024_768
        - RESOLUTION_1024_832
        - RESOLUTION_1024_896
        - RESOLUTION_1024_960
        - RESOLUTION_1024_1024
        - RESOLUTION_1088_768
        - RESOLUTION_1088_832
        - RESOLUTION_1088_896
        - RESOLUTION_1088_960
        - RESOLUTION_1120_896
        - RESOLUTION_1152_704
        - RESOLUTION_1152_768
        - RESOLUTION_1152_832
        - RESOLUTION_1152_864
        - RESOLUTION_1152_896
        - RESOLUTION_1216_704
        - RESOLUTION_1216_768
        - RESOLUTION_1216_832
        - RESOLUTION_1232_768
        - RESOLUTION_1248_832
        - RESOLUTION_1280_704
        - RESOLUTION_1280_720
        - RESOLUTION_1280_768
        - RESOLUTION_1280_800
        - RESOLUTION_1312_736
        - RESOLUTION_1344_640
        - RESOLUTION_1344_704
        - RESOLUTION_1344_768
        - RESOLUTION_1408_576
        - RESOLUTION_1408_640
        - RESOLUTION_1408_704
        - RESOLUTION_1472_576
        - RESOLUTION_1472_640
        - RESOLUTION_1472_704
        - RESOLUTION_1536_512
        - RESOLUTION_1536_576
        - RESOLUTION_1536_640
      type: string
      description: '(For model_version for 2.0 only, cannot be used in conjunction with aspect_ratio) The resolution to use for image generation, represented in width x height. If not specified, defaults to using aspect_ratio.'
      example: RESOLUTION_1024_1024
    AspectRatio:
      title: AspectRatio
      enum:
        - ASPECT_10_16
        - ASPECT_16_10
        - ASPECT_9_16
        - ASPECT_16_9
        - ASPECT_3_2
        - ASPECT_2_3
        - ASPECT_4_3
        - ASPECT_3_4
        - ASPECT_1_1
        - ASPECT_1_3
        - ASPECT_3_1
      type: string
      description: '(Cannot be used in conjunction with resolution) The aspect ratio to use for image generation, which determines the image''s resolution. Defaults to ASPECT_1_1.'
      externalDocs:
        url: https://docs.ideogram.ai/usage/advanced-prompting/aspect-ratios
      example: ASPECT_10_16
    Price:
      title: Price
      required:
        - amount
        - currency_code
      type: object
      properties:
        currency_code:
          title: currency_code
          type: string
          description: The ISO 4217 currency code for the price object.
          example: USD
        amount:
          title: amount
          type: number
          description: 'The amount of the currency in the common denomination. For example, in USD this is cents.'
          example: 1050
      description: Represents a price.
      example:
        amount: 1050
        currency_code: USD
    postInternalTesting_200_response:
      title: postInternalTesting_200_response
      type: object
      properties:
        response_content:
          title: response_content
          type: string
      example:
        response_content: response_content
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      description: API key for access control. Use in the header with the name \"Api-Key\"
      name: Api-Key
      in: header
      x-apikeyInfoFunc: external_api.generated.openapi.controllers.security_controller.info_from_ApiKeyAuth
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: external_api.generated.openapi.controllers.security_controller.info_from_BearerAuth
security:
  - ApiKeyAuth: [ ]
tags:
  - name: generate
    description: All things related to generating content.
    externalDocs:
      description: Find out more
      url: https://docs.ideogram.ai
  - name: manage
    description: Content related to managing API account and API access
    externalDocs:
      description: Find out more
      url: https://docs.ideogram.ai
  - name: vision
    description: Operations related to understanding visual content
    externalDocs:
      description: Find out more
      url: https://docs.ideogram.ai
  - name: internal-testing
    description: Operations and endpoints designed for doing internal testing. Not intended to be called outside a test environment.
    externalDocs:
      description: Find out more
      url: https://docs.ideogram.ai